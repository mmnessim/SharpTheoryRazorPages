@page "/scalequiz"
@model SharpTheory.Pages.ScaleQuizModel
<h1>
    UNDER CONSTRUCTION
</h1>

<div class="piano">
  <div class="white-key" data-note=0></div>
  <div class="white-key" data-note=2></div>
  <div class="white-key" data-note=4></div>
  <div class="white-key" data-note=5></div>
  <div class="white-key" data-note=7></div>
  <div class="white-key" data-note=9></div>
  <div class="white-key" data-note=11></div>
    <div class="black-keys">
        <div class="black-key" style="left: 35px;" data-note=1></div>
        <div class="black-key" style="left: 85px;" data-note=3></div>
        <div class="black-key" style="left: 185px;" data-note=6></div>
        <div class="black-key" style="left: 235px;" data-note=8></div>
        <div class="black-key" style="left: 285px;" data-note=10></div>
  </div>
</div>

@if (Model.Integers != null && Model.Scale != null)
{
    <div class="scale-container">
        @foreach (var I in Model.Integers)
        {
            <button class="btn btn-secondary m-1
                    @(I.Integer == Model.Scale.Integer ? "included" : "")
                    @(Model.Scale.Major != null &&
                        (
                            Model.Scale.Major.Notes.Contains(I.Names[0]) ||
                            (I.Names.Count > 1 && Model.Scale.Major.Notes.Contains(I.Names[1]))
                            )
                            ? "selected" : "")">
                @I.Names[0]@(I.Names.Count > 1 ? " / " + I.Names[1] : "")
            </button>
        }
    </div>
}

@if (Model.Scale != null)
{
    <p>
        @Model.Scale.Tonic
    </p>
    @if (Model.Scale.Major != null)
    {
        @foreach (var note in Model.Scale.Major.Notes)
        {
            <span>@note</span>
        }
    }
}
